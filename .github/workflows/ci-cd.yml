name: CI / CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint & Type-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install linting tools
        run: pip install flake8 mypy
      - name: Run flake8
        run: flake8 .
      - name: Run mypy
        run: mypy .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      # if you ever integrate Redis caching
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt
      - name: Run pytest
        run: pytest --maxfail=1 --disable-warnings -q

  build_and_push:
    name: Build & Push Docker
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build image
        run: |
          docker build \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/api-football-smartbets:${{ github.sha }} \
            --tag ${{ secrets.DOCKERHUB_USERNAME }}/api-football-smartbets:latest \
            .
      - name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-football-smartbets:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-football-smartbets:latest

  deploy_render:
    name: Deploy to Render
    needs: build_and_push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render.com
        uses: render-examples/render-deploy-action@v1
        with:
          apiKey: ${{ secrets.RENDER_API_KEY }}
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
